{"version":3,"sources":["assets/bg.png","fonts/Pixel-LCD-7.woff","tetrominos.js","gameHelpers.js","hooks/useStage.js","hooks/useGameStatus.js","components/Stage/styles.js","components/Cell/styles.js","components/Cell/index.js","components/Stage/index.js","components/Display/styles.js","components/Display/index.js","components/StartButton/styles.js","components/StartButton/index.js","components/Tetris/styles.js","components/Tetris/index.js","hooks/usePlayer.js","hooks/useInterval.js","styles/global.js","App.js","index.js"],"names":["module","exports","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","styled","div","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","Button","button","StartButton","callback","onClick","Wrapper","bgImage","StyledTetris","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","createGlobalStyle","font","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a623a707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","module.exports = __webpack_public_path__ + \"static/media/Pixel-LCD-7.e2897552.woff\";","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0]\r\n    ],\r\n    color: '80, 227, 230'\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, 'J', 0],\r\n      [0, 'J', 0],\r\n      ['J', 'J', 0]\r\n    ],\r\n    color: '36, 95, 223'\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, 'L', 0],\r\n      [0, 'L', 0],\r\n      [0, 'L', 'L']\r\n    ],\r\n    color: '223, 173, 36'\r\n  },\r\n  O: {\r\n    shape: [\r\n      ['O', 'O'],\r\n      ['O', 'O'],\r\n    ],\r\n    color: '223, 217, 36'\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, 'S', 'S'],\r\n      ['S', 'S', 0],\r\n      [0, 0, 0]\r\n    ],\r\n    color: '48, 211, 56'\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 0, 0],\r\n      ['T', 'T', 'T'],\r\n      [0, 'T', 0]\r\n    ],\r\n    color: '132, 61, 198'\r\n  },\r\n  Z: {\r\n    shape: [\r\n      ['Z', 'Z', 0],\r\n      [0, 'Z', 'Z'],\r\n      [0, 0, 0]\r\n    ],\r\n    color: '227, 78, 78'\r\n  },\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ'\r\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)]\r\n  return TETROMINOS[randTetromino]\r\n}","export const STAGE_WIDTH = 12\r\nexport const STAGE_HEIGHT = 20\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  )\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y++) {\r\n    for (let x = 0; x < player.tetromino[y].length; x++) {\r\n      // 1. Check that we're on an actual Tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        // 2. Check that our move is inside the game areas height (y)\r\n        // We shouldn't go through the bottom of the play area\r\n        // 3. Check that our move is inside the game areas width (x)\r\n        // 4. Check that the cell we're moving to isn't set to clear\r\n        if (\r\n          !stage[y + player.pos.y + moveY] ||\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n          'clear'\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false\r\n}","import { useState, useEffect } from 'react'\r\n\r\nimport { createStage } from '../gameHelpers'\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage())\r\n  const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0)\r\n\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1)\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\r\n\r\n          return ack\r\n        }\r\n\r\n        ack.push(row)\r\n\r\n        return ack\r\n      }, [])\r\n\r\n    const updateStage = prevStage => {\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (\r\n          cell[1] === 'clear' ? [0, 'clear'] : cell)\r\n        )\r\n      )\r\n\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ]\r\n          }\r\n        })\r\n      })\r\n\r\n      if (player.collided) {\r\n        resetPlayer()\r\n        return sweepRows(newStage)\r\n      }\r\n\r\n      return newStage\r\n    }\r\n\r\n    setStage(prev => updateStage(prev))\r\n  }, [player, resetPlayer])\r\n\r\n  return [stage, setStage, rowsCleared]\r\n}","import { useState, useEffect, useCallback } from 'react'\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0)\r\n  const [rows, setRows] = useState(0)\r\n  const [level, setLevel] = useState(0)\r\n\r\n  const linePoints = [40, 100, 300, 1200]\r\n\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCleared > 0) {\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\r\n      setRows(prev => prev + rowsCleared)\r\n    }\r\n  }, [level, linePoints, rowsCleared])\r\n\r\n  useEffect(() => {\r\n    calcScore()\r\n  }, [calcScore, rowsCleared, score])\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel]\r\n}","import styled from 'styled-components'\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(20vw / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 20vw;\r\n  background: #111;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${props => props.color}, 0.8);\r\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react'\r\nimport { StyledCell } from './styles'\r\nimport { TETROMINOS } from '../../tetrominos'\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color} />\r\n)\r\n\r\nexport default React.memo(Cell)","import React from 'react'\r\nimport { StyledStage } from './styles'\r\n\r\nimport Cell from '../Cell'\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {\r\n      stage.map(row =>\r\n        row.map((cell, x) =>\r\n          <Cell key={x} type={cell[0]} />\r\n        )\r\n      )\r\n    }\r\n  </StyledStage>\r\n)\r\n\r\nexport default Stage","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center; \r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`;","import React from 'react'\r\nimport { StyledDisplay } from './styles'\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`","import React from 'react'\r\nimport { Button } from './styles'\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <Button onClick={callback}>Start Game</Button>\r\n)\r\n\r\nexport default StartButton","import styled from 'styled-components'\r\n\r\nimport bgImage from '../../assets/bg.png'\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`","import React, { useState } from 'react'\r\n\r\nimport { usePlayer } from '../../hooks/usePlayer'\r\nimport { useStage } from '../../hooks/useStage'\r\nimport { useInterval } from '../../hooks/useInterval'\r\nimport { useGameStatus } from '../../hooks/useGameStatus'\r\n\r\nimport Stage from '../Stage'\r\nimport Display from '../Display'\r\nimport StartButton from '../StartButton'\r\n\r\nimport { Wrapper, StyledTetris } from './styles'\r\n\r\nimport { createStage, checkCollision } from '../../gameHelpers'\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null)\r\n  const [gameOver, setGameOver] = useState(false)\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared)\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 }))\r\n      updatePlayerPos({ x: dir, y: 0 })\r\n  }\r\n\r\n  const startGame = () => {\r\n    setStage(createStage())\r\n    setDropTime(1000)\r\n    resetPlayer()\r\n    setGameOver(false)\r\n    setScore(0)\r\n    setRows(0)\r\n    setLevel(0)\r\n  }\r\n\r\n  const drop = () => {\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1)\r\n      setDropTime(1000 / (level + 1) + 200)\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false })\r\n    }\r\n    else {\r\n      if (player.pos.y < 1) {\r\n        setGameOver(true)\r\n        setDropTime(null)\r\n      }\r\n\r\n      updatePlayerPos({ x: 0, y: 0, collided: true })\r\n    }\r\n  }\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver && keyCode === 40)\r\n      setDropTime(1000 / (level + 1) + 200)\r\n  }\r\n\r\n  const dropPlayer = () => {\r\n    setDropTime(null)\r\n    drop()\r\n  }\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37)\r\n        movePlayer(-1)\r\n      else if (keyCode === 39)\r\n        movePlayer(1)\r\n      else if (keyCode === 40)\r\n        dropPlayer()\r\n      else if (keyCode === 38)\r\n        playerRotate(stage, 1)\r\n    }\r\n  }\r\n\r\n  useInterval(() => {\r\n    drop()\r\n  }, dropTime)\r\n\r\n  return (\r\n    <Wrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n              <div>\r\n                <Display text={`Score: ${score}`} />\r\n                <Display text={`Rows: ${rows}`} />\r\n                <Display text={`Level: ${level}`} />\r\n              </div>\r\n            )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Tetris","import { useState, useCallback } from 'react'\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos'\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers'\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  })\r\n\r\n  const rotate = (matrix, dir) => {\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map(col => col[index])\r\n    )\r\n\r\n    if (dir > 0)\r\n      return rotatedTetro.map(row => row.reverse())\r\n\r\n    return rotatedTetro.reverse()\r\n  }\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\r\n\r\n    const pos = clonedPlayer.pos.x\r\n    let offset = 1\r\n\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset\r\n      offset = -(offset + (offset > 0 ? 1 : -1))\r\n\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir)\r\n        clonedPlayer.pos.x = pos\r\n        \r\n        return\r\n      }\r\n    }\r\n\r\n    setPlayer(clonedPlayer)\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided\r\n    }))\r\n  }\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false\r\n    })\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate]\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport font from '../fonts/Pixel-LCD-7.woff'\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    margin: 0;\r\n  }\r\n  @font-face {\r\n    font-family: 'Pixel';\r\n    src: url(${font}) format('woff');\r\n  }\r\n`","import React from 'react'\r\nimport Tetris from './components/Tetris'\r\nimport GlobalStyle from './styles/global'\r\n\r\nconst App = () => (\r\n  <>\r\n    <GlobalStyle />\r\n    <Tetris />\r\n  </>\r\n)\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}